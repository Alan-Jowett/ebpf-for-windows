# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT
name: Code-Coverage

on: push

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        configurations: [Debug]
    runs-on: windows-2019
    env:
      # Path to the solution file relative to the root of the project.
      SOLUTION_FILE_PATH: ebpf-for-windows.sln

      # Configuration type to build.
      # You can convert this to a build matrix if you need coverage of multiple configuration types.
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

      BUILD_PLATFORM: x64

    steps:
    - uses: actions/checkout@b0e28b5ac45a892f91e7d036f8200cf5ed489415
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@becb80cf9a036187bb1e07e74eb64e25850d757a

    - name: Install LLVM and Clang
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        curl -fsSL -o LLVM10.exe https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/LLVM-10.0.0-win64.exe
        7z x LLVM10.exe -y -o"C:/Program Files/LLVM"
        echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Setup OpenCppCoverage and add to PATH
      id: setup_opencppcoverage
      run: |
        choco install OpenCppCoverage -y
        echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Create verifier project
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake -G "Visual Studio 16 2019" -S external\ebpf-verifier -B external\ebpf-verifier\build

    - name: Create catch2 project
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake -G "Visual Studio 16 2019" -S external\catch2 -B external\catch2\build -DBUILD_TESTING=OFF

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}

    # Run unit_tests.exe and generate unit_tests.cov
    - name: Generate Report - Unit test
      run: OpenCppCoverage.exe --sources $PWD --excluded_sources $PWD\external\Catch2 --export_type binary:unit_tests.cov --working_dir ${{env.BUILD_PLATFORM}}\${{env.BUILD_CONFIGURATION}} -- ${{env.BUILD_PLATFORM}}\${{env.BUILD_CONFIGURATION}}\unit_tests.exe -s

    # Run ebpf_client.exe, merge unit_tests.cov and generate ebpf_for_windows.xml
    - name: Generate Report - RPC Client Tests
      run: OpenCppCoverage.exe --sources $PWD --excluded_sources $PWD\external\Catch2 --input_coverage unit_tests.cov --export_type cobertura:ebpf_for_windows.xml --working_dir ${{env.BUILD_PLATFORM}}\${{env.BUILD_CONFIGURATION}} -- ${{env.BUILD_PLATFORM}}\${{env.BUILD_CONFIGURATION}}\ebpf_client.exe -s

    - name: Upload Report to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ebpf_for_windows.xml
        fail_ci_if_error: true
        functionalities: fix
